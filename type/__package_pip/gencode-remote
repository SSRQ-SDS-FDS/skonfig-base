#!/bin/sh -e
#
# 2022 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

shquot() {
	sed -e "s/'/'\\\\''/g" -e "1s/^/'/" -e "\$s/\$/'/" <<-EOF
	$*
	EOF
}

read -r state_is <"${__object:?}/explorer/state"
read -r state_should <"${__object:?}/parameter/state"

# short circuit if state is the same and no further extras to install
test "${state_is}" != "${state_should}" || exit 0

if test -f "${__object:?}/parameter/requirement"
then
	requirement=$(cat "${__object:?}/parameter/requirement")
else
	requirement=${__object_id:?}
fi

pip=$(cat "${__object:?}/explorer/pip")
test -n "${pip}" || {
	echo 'Could not find pip.' >&2
	if test -f "${__object:?}/parameter/pip"
	then
		printf 'Please make sure that "%s" is a path to an executable or name of a command on the target.' \
			"$(cat "${__object:?}/parameter/pip")" >&2
	else
		echo 'Please make sure that pip is installed on the target or specify the command to use in --pip.' >&2
	fi
	exit 1
}

runas=$(cat "${__object:?}/parameter/runas" 2>/dev/null || :)

do_cmd() {
	if test -n "${runas}"
	then
		printf 'su - %s -c %s\n' "$(shquot "${runas}")" "$(shquot "exec $1")"
	else
		printf '%s\n' "$1"
	fi
}

case ${state_should}
in
	(present)
		do_cmd "${pip} install -q $(shquot "${requirement}")"
		echo installed >>"${__messages_out:?}"
		;;
	(absent)
		do_cmd "${pip} uninstall -q -y $(shquot "${requirement}")"
		echo removed >>"${__messages_out:?}"
		;;
	(*)
		printf 'Invalid --state: %s\n' "${state_should}" >&2
		exit 1
		;;
esac
