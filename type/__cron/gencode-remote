#!/bin/sh -e
#
# 2011 Steven Armstrong (steven-cdist at armstrong.cc)
# 2013      Nico Schottelius (nico-cdist at schottelius.org)
# 2013      Thomas Oettli (otho at sfs.biz)
# 2017      Daniel Heule (hda at sfs.biz)
# 2022 Dennis Camera (cdist at dtnr.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

breify() {
	# Imported from type/__package_apt/explorer/state
	# Convert arguments to a POSIX BRE-compatible form, i.e. escape special
	# characters (incl. delimiter)
	printf '%s' "$*" | sed -e 's/[].^$*\[]/\\&/g' -e 's:/:\\/:g'
}

name="$__object_name"
user="$(cat "$__object/parameter/user")"
command="$(cat "$__object/parameter/command")"

if [ -f "$__object/parameter/raw_command" ]; then
	echo 'error: parameter --raw_command is not supported anymore.' >&2
	exit 1
elif [ -f "$__object/parameter/raw" ]; then
   raw="$(cat "$__object/parameter/raw")"
   entry="$raw $command # $name"
else
   minute="$(cat "$__object/parameter/minute")"
   hour="$(cat "$__object/parameter/hour")"
   if test -f "${__object:?}/parameter/day_of_month"
   then
      # deprecated name
      day_of_month="$(cat "$__object/parameter/day_of_month")"
   else
      day_of_month="$(cat "$__object/parameter/day-of-month")"
   fi
   month="$(cat "$__object/parameter/month")"
   if test -f "${__object:?}/parameter/day_of_week"
   then
      # deprecated name
      day_of_week="$(cat "$__object/parameter/day_of_week")"
   else
      day_of_week="$(cat "$__object/parameter/day-of-week")"
   fi
   entry="$minute $hour $day_of_month $month $day_of_week $command # $name"
fi

mkdir "$__object/files"
echo "$entry" > "$__object/files/entry"

if [ -s "$__object/explorer/entry" ]; then
    if diff -q "$__object/files/entry" "$__object/explorer/entry" >/dev/null; then
        state_is=present
    else
        state_is=modified
    fi
else
    state_is=absent
fi

state_should="$(cat "$__object/parameter/state")"

[ "$state_is" = "$state_should" ] && exit 0

case "$state_should" in
    present)
		# NOTE: We need to lock against parallel execution with __cron because
		#       both types modify the same "file" and crontab(1) does not
		#       synchronization of its own.
		sed -e '/^#/d' -e '/^$/d' "${__type:?}/files/lock.sh"

        # if we insert new entry, filter also all entries out with the same id
        printf '%s\n' \
            '{' \
            "crontab -u '$user' -l 2>/dev/null | grep -v -E \"$filter\" | grep -v \" # $(breify "${name}")\\$\" 2>/dev/null || true" \
            "cat <<'EOF'" \
            "${entry}" \
            "EOF" \
            "} | crontab -u '$user' -"
    ;;
    absent)
		# NOTE: We need to lock against parallel execution with __cron because
		#       both types modify the same "file" and crontab(1) does not
		#       synchronization of its own.
		sed -e '/^#/d' -e '/^$/d' "${__type:?}/files/lock.sh"

        echo "( crontab -u $user -l 2>/dev/null | grep -v -E \"$filter\" 2>/dev/null || true ) | \\"
        echo "grep -v \" # $(breify "${name}")\\$\" | crontab -u $user -"
    ;;
esac
