#!/bin/sh -e
#
# 2022 Dennis Camera (cdist at dtnr.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

quote() { printf '%s\n' "$*" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/'/"; }

os=$(cat "${__global:?}/explorer/os")

user=$(cat "${__object:?}/parameter/user")

if test -f "${__object:?}/parameter/name"
then
	read -r var_name <"${__object:?}/parameter/name"
else
	var_name=${__object_id:?}
fi

read -r state_is <"${__object:?}/explorer/state"
read -r state_should <"${__object:?}/parameter/state"

test "${state_is}" != "${state_should}" || exit 0

case ${os}
in
	(solaris)
		crontab_print_cmd="crontab -l $(quote "${user}")"
		# TODO: On Solaris 10 crontab(1) exits with 0 if an error occurs.
		#       It only logs an error message to stderr.
		crontab_update_cmd="su - $(quote "${user}") -c crontab"

		# Make sure that awk from xpg4 is used for the scripts to work
		printf 'PATH=/usr/xpg4/bin/:${PATH}\n'
		;;
	(*bsd)
		crontab_print_cmd="crontab -u $(quote "${user}") -l"
		crontab_update_cmd="crontab -u $(quote "${user}") -"
		;;
	(*)
		# NOTE: vixie cron, cronie, FreeBSD cron (and others?) add these "magic"
		#       comments to the top of the crontab file:
		#
		#       # DO NOT EDIT THIS FILE - edit the master and reinstall.
		#       # (/tmp/crontab.xii0AL installed on Wed Apr 13 13:04:43 2022)
		#       # (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
		#
		#       crontab -l usually removes these lines in its output, but some
		#       implementations (e.g. some versions of Cronie) don't, leading to a
		#       repitition of these lines on every change.
		#
		#       Also, OpenBSD/NetBSD cron uses magic comments of a different form.
		#
		#       $comment_filter was inspired by the __cron type.
		comment_filter='^# *\(DO NOT EDIT THIS FILE\|(.* installed on \|(\(Cron\|Cronie\) version \)'

		# NOTE: $!N makes sure that matching comment lines are only removed from the
		#       beginning of the file.
		crontab_print_cmd="crontab -u $(quote "${user}") -l 2>/dev/null | sed -e $(quote "/${comment_filter}/d") -e '\$!N'"
		crontab_update_cmd="crontab -u $(quote "${user}") -"
		;;
esac

awk_var_filter='index($0, n) == 1 && substr($0, length(n)+1) ~ /^ *=/'

case ${state_should}
in
	(present)
		test -f "${__object:?}/parameter/value" || {
			echo 'Parameter --value is required when --state present.' >&2
			exit 1
		}

		qvalue=$(cat "${__object:?}/parameter/value")
		case $(grep -o '[ "'\'']' "${__object:?}/parameter/value" | tr -d '\n')
		in
			('') ;;
			(*\"*) qvalue="'${qvalue}'" ;;
			(*) qvalue="\"${qvalue}\"" ;;
		esac

		update_script='function prtvar() { printf "%s=%s\n", n, v; p++ } '${awk_var_filter}' { prtvar(); next } /^[ \t]*#[ \t]*(m|minutes?)[ \t](h|hours?)/ || /^[ \t]*[0-9*@]/ { p++ } p==1 { prtvar() } { print } END { if (!p) prtvar() }'
		modify_crontab_cmd="awk -v n=$(quote "${var_name}") -v v=$(quote "${qvalue}") $(quote "${update_script}")"

		printf '%s | %s | %s\n' \
			"${crontab_print_cmd?}" \
			"${modify_crontab_cmd?}" \
			"${crontab_update_cmd?}"
		;;
	(absent)
		printf '%s | %s | %s\n' \
			"${crontab_print_cmd?}" \
			"awk -v n=$(quote "${var_name}") $(quote "!(${awk_var_filter?})")" \
			"${crontab_update_cmd?}"
		;;
	(*)
		printf 'Invalid --state: %s\n' "${state_should}" >&2
		exit 1
		;;
esac
